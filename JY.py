# -*- coding:gbk -*-
# 实名制导入手动校验
import requests
from openpyxl import load_workbook

class I:

    def __init__(self) -> None:
        self.host = 'http://10.64.2.100:30010'
        self.session = requests.session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',
            "Access-Token": '240fae7b-9d93-4ca8-beda-9a0bad5fa09e'
        })
        self.dict = {
            '农、林、牧、渔业': '0100',
            # '农业': '0101',
            # '林业': '0102',
            # '畜牧业': '0103',
            # '渔业': '0104',
            # '农、林、牧、渔服务业': '0105',
            '采矿业': '0200',
            # '煤炭开采和洗选业': '0206',
            # '石油和天然气开采业': '0207',
            # '黑色金属矿采选业': '0208',
            # '有色金属矿采选业': '0209',
            # '非金属矿采选业': '0210',
            # '其他采矿业': '0211',
            '制造业': '0300',
            # '农副食品加工业': '0313',
            # '食品制造业': '0314',
            # '饮料制造业': '0315',
            # '烟草制品业 ': '0316',
            # '纺织业': '0317',
            # '纺织服装、鞋、帽制造业': '0318',
            # '皮革、毛皮、羽毛（绒）及其制品业': '0319',
            # '木材加工及木、竹、藤、棕、草制品业': '0320',
            # '家具制造业 ': '0321',
            # '造纸和纸制品业 ': '0322',
            # '印刷业和记录媒介的复制': '0323',
            # '文教体育用品制造业': '0324',
            # '石油加工、炼焦及核燃料加工业 ': '0325',
            # '化学原料及化学制品制造业': '0326',
            # '医药制造业 ': '0327',
            # '化学纤维制造业': '0328',
            # '橡胶制品业': '0329',
            # '塑料制品业': '0330',
            # '非金属矿物制品业': '0331',
            # '黑色金属冶炼及压延加工业 ': '0332',
            # '有色金属冶炼及压延加工业 ': '0333',
            # '金属制品业 ': '0334',
            # '通用设备制造业': '0335',
            # '专用设备制造业 ': '0336',
            # '交通运输设备制造业': '0337',
            # '电气机械及器材制造业 ': '0339',
            # '通信设备、计算机及其他电子设备制造业': '0340',
            # '仪器仪表及文化、办公用机械制造业': '0341',
            # '工艺品及其他制造业': '0342',
            # '废弃资源和废旧材料回收加工业  ': '0343',
            '电力、燃气及水的生产和供应业': '0400',
            # '电力、热力的生产和供应业': '0444',
            # '燃气生产和供应业  ': '0445',
            # '水的生产和供应业  ': '0446',
            '建筑业': '0500',
            # '房屋和土木工程建筑业': '0547',
            # '建筑安装业': '0548',
            # '建筑装饰业': '0549',
            # '其他建筑业': '0550',
            '交通运输、仓储和邮政业': '0600',
            # '铁路运输业': '0651',
            # '道路运输业': '0652',
            # '城市公共交通业': '0653',
            # '水上运输业': '0654',
            # '航空运输业 ': '0655',
            # '管道运输业 ': '0656',
            # '装卸搬运和其他运输服务业': '0657',
            # '仓储业 ': '0658',
            # '邮政业': '0659',
            '信息传输、计算机服务和软件业': '0700',
            # '电信和其他信息传输服务业': '0760',
            # '计算机服务业': '0761',
            # '软件业': '0762',
            '批发和零售业': '0800',
            # '批发业': '0863',
            # '零售业': '0865',
            '住宿和餐饮业': '0900',
            # '住宿业': '0966',
            # '餐饮业': '0967',
            # '金融业': '1000',
            # '银行业': '1068',
            # '证券业': '1069',
            # '保险业': '1070',
            # '其他金融活动': '1071',
            '房地产业': '1172',
            '租赁和商务服务业': '1200',
            # '租赁业': '1271',
            # '商务服务业': '1272',
            '科学研究、技术服务和地质勘查业': '1300',
            # '研究与试验发展': '1375',
            # '专业技术服务业': '1376',
            # '科技交流和推广服务业': '1377',
            # '地质勘查业': '1378',
            '水利、环境和公共设施管理业': '1400',
            # '水利管理业': '1479',
            # '环境管理业': '1480',
            # '公共设施管理业': '1481',
            '居民服务和其他服务业': '1500',
            # '居民服务业': '1582',
            # '其他服务业': '1583',
            '教育': '1684',
            '卫生、社会保障和社会福利业': '1700',
            # '卫生': '1785',
            # '社会保障业': '1786',
            # '社会福利业': '1787',
            '文化、体育和娱乐业': '1800',
            # '新闻出版业': '1888',
            # '广播、电视、电影和音像业': '1889',
            # '文化艺术业': '1890',
            # '体育': '1891',
            # '娱乐业': '1892',
            '公共管理和社会组织': '1900',
            # '中国共产党机关': '1993',
            # '国家机构': '1994',
            # '人民政协和民主党派': '1995',
            # '群众团体、社会团体和宗教组织': '1996',
            # '基层群众自治组织': '1997',
            '国际组织': '2098'
        }
    
    def read_file(self):
        wb = load_workbook('暖泉2023.xlsx')
        ws = wb.active
        dic = {x.value: y.value for x, y in zip(ws['E'], ws['N']) if x.value and x.value.isalnum()}
        return dic

    def req(self):
        # 230304303303河北
        # 230304304302小半道
        # 230304304307立井
        # 230304304304白灰窑
        # 230304304301大半道
        # 230304304305暖泉
        dic = {
            "aae017": "230304304305",
            "acc033Query": [],
            "pageNo": 1,
            "pageSize": 300
        }
        datas = self.read_file()
        print(datas)
        res = self.session.post(url=self.host + '/hljjy/lpleaf6-employment/api/cb/d/a/queryCc03New', json=dic)🔄  ❓ 
        if res.status_code==200:
            lis = res.json().get('list', [])
            # print(lis)
            for i, d in enumerate(lis, start=1):
                hy = datas.get(d.get('aac002'))
                if hy:
                    d['aab022'] = self.dict.get(hy)
                    print(f'{i}-{d.get("aac003")}-{hy}')
                    res2 = self.session.post(url=self.host + '/hljjy/lpleaf6-employment/api/cb/d/a/modifyCc03New', json=d)
                    print(res2.status_code)


if __name__ == '__main__':
    i = I()
    i.req()
        
    
